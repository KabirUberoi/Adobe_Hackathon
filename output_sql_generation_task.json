[{"NL": "Find the average time spent on the website by users who clicked on a push notification and completed a survey.", "Query": "SELECT  AVG(T1.time_spent_seconds) AS average_time_spent  FROM  events AS T1 JOIN transactions_and_payments AS T2 ON T1.transaction_unique_identifier = T2.transaction_unique_identifier JOIN customers_loyalty_program AS T3 ON T2.corresponding_customer_reference_identifier = T3.associated_customer_reference_id WHERE T1.push_notification_clicked = TRUE AND T2.refund_status = FALSE AND T3.participation_in_exclusive_beta_testing = FALSE; SELECT  AVG(T1.time_spent_seconds) AS average_time_spent  FROM  events AS T1 JOIN transactions_and_payments AS T2 ON T1.transaction_unique_identifier = T2.transaction_unique_identifier JOIN customers_loyalty_program AS T3 ON T2.corresponding_customer_reference_identifier = T3.associated_customer_reference_id JOIN customers AS T4 ON T3.customer_birthday_special_discount = T4.person_customer_id WHERE T1.push_notification_clicked = TRUE AND T2.refund_status = FALSE AND T3.participation_in_exclusive_beta_testing = FALSE AND T4.person_is_premium = TRUE; SELECT  AVG(T1.time_spent_seconds) AS average_time_spent  FROM  events AS T1 JOIN transactions_and_payments AS T2 ON T1.transaction_unique_identifier = T2.transaction_unique_identifier JOIN customers_loyalty_program AS T3 ON T2.corresponding_customer_reference_identifier = T3.associated_customer_reference_id JOIN customers AS T4 ON T3.customer_birthday_special_discount = T4.person_customer_id JOIN customers_loyalty_program AS T5 ON T4.person_customer_id = T5.loyalty_membership_unique_identifier WHERE T1.push_notification_clicked = TRUE AND T2.refund_status = FALSE AND T3.participation_in_exclusive_beta_testing = FALSE AND T4.person_is_premium = TRUE AND T5.eligible_for_special_promotions = TRUE;"}, {"NL": "Get the count of wishlist items for each user and sort them in descending order.", "Query": "SELECT  c.person_customer_id, COUNT(w.id) AS wishlist_count  FROM  customers_loyalty_program c JOIN customers_loyalty_program wp ON c.loyalty_membership_unique_identifier = wp.loyalty_membership_unique_identifier JOIN wishlist w ON wp.customer_birthday_special_discount = w.fk_user_id GROUP BY c.person_customer_id ORDER BY wishlist_count DESC;"}, {"NL": "Find the products in the cart that have a promotional discounted price less than $50, along with the customer's loyalty program tier level and the customer's accumulated loyalty points balance.", "Query": "ERROR: Invalid API response;"}, {"NL": "What is the total discount amount redeemed by customers who have participated in exclusive beta testing and have a loyalty membership unique identifier greater than 1000?", "Query": "ERROR: Invalid API response;"}, {"NL": "Retrieve the total amount of all orders that contain products from the cart of user with ID 123 and have a shipping date after January 1, 2023.", "Query": "ERROR: Invalid API response;"}]